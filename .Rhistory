##     / ___ |/ / /  __/ / /_/ (__  )  __/ /      ##
##    /_/  |_/_/_/\___/_/\__, /____/\___/_/       ##
##                      /____/                    ##
####################################################
####################################################
####################################################
##        ___    ____     __                      ##
##       /   |  / / /__  / /_  __________  _____  ##
##      / /| | / / / _ \/ / / / / ___/ _ \/ ___/  ##
##     / ___ |/ / /  __/ / /_/ (__  )  __/ /      ##
##    /_/  |_/_/_/\___/_/\__, /____/\___/_/       ##
##                      /____/                    ##
####################################################
(xlsx)
library(here)
# Packages
library(tidyverse)
library(readxl)
library(here)
# Packages
library(tidyverse)
library(readxl)
library(here)
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
View(data)
View(data)
View(data)
menu(colnames(data), title="Select gene")
a <- menu(colnames(data), title="Select gene")
a <- menu(colnames(data), title="Select gene")
a
?read_xl
?read_xlsx
menu(colnames(data), title="Select gene")
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
data %>% remove_rownames %>% column_to_rownames(var="diagnosis")
View(data)
View(data)
rownames(data) <- data[, 1]
data <- data[, -1]
View(data)
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
rownames(data) <- data[, 1]
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"), na = NA)
rownames(data) <- data[, 1]
View(data)
data$diagnosis
rownames(data) <- data$diagnosis
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Select gene")
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Select gene") + 1
SNP <- data[, a]
View(SNP)
#####################################################
##        ___    ____     __                       ##
##       /   |  / / /__  / /_  __________  _____   ##
##      / /| | / / / _ \/ / / / / ___/ _ \/ ___/   ##
##     / ___ |/ / /  __/ / /_/ (__  )  __/ /       ##
##    /_/  |_/_/_/\___/_/\__, /____/\___/_/        ##
##                      /____/                     ##
#####################################################
# Packages
library(tidyverse)
library(readxl)
library(here)
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Select gene") + 1
View(SNP)
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- data[, a]
colname(SNP)
colnames(SNP)
print("Selected", colnames(SNP))
print("Selected" + colnames(SNP))
print(paste("Selected", colnames(SNP)))
print(paste(colnames(SNP), "selected"))
SNP[, 1]
SNP[, 1] <- as.factor(SNP[, 1])
SNP <- as.factor(data[, a])
View(SNP)
# Testing for Hardy-Weinberg equilibrium
conTable <- table(SNP)
conTable
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
# Testing for Hardy-Weinberg equilibrium
conTable <- table(SNP)
contable
conTable
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- as.factor(data[, a])
print(paste(colnames(SNP), "selected"))
SNP <- data[, a]
print(paste(colnames(SNP), "selected"))
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP)
rm(conTable)
HWTable
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
print(paste(colnames(SNP), "selected"))
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
print(paste(colnames(SNP), "selected"))
View(SNP)
SNP <- data[, a]
print(paste(colnames(SNP), "selected"))
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP)
HWTable
View(data)
View(SNP)
HWTable[1]
HWTable[2]
A_freq <- (2*HWTable[1] + HWTable[2])/(2*HWTable[1] + HWTable[2] + 2*HWTable[3])
A_freq <- (2*HWTable[3] + HWTable[2])/(2*HWTable[1] + HWTable[2] + 2*HWTable[3])
A_freq <- (2*HWTable[1] + HWTable[2])/(2*HWTable[1] + 2*HWTable[2] + 2*HWTable[3])
B_freq <- (2*HWTable[3] + HWTable[2])/(2*HWTable[1] + 2*HWTable[2] + 2*HWTable[3])
A_freq
HWTable[[1]]
A_freq <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
B_freq <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable[1]
HWTable[[1]]
sum(A_freq, B_freq)
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
rbind(HWTable, c(p^2, 2*p*q, q^2))
sum(HWTable)
rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
HWTable
HWTable <- rbind(HWTable, Expected = c(p^2, 2*p*q, q^2)*sum(HWTable))
HWTable
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
HWTable
HWTable <- table(SNP)
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
HWTable
rownames(HWTable) <- c("Observed", "Expected")
HWTable
chisq.test(HWTable)
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- data[, a]
print(paste(colnames(SNP), "selected"))
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP)
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
HWTable
SNP
chisq.test(HWTable)
chisq.test(t(HWTable))
chisq.test(HWTable[-1,])
HWTable[-1,]
HWTable[,-1]
chisq.test(HWTable[,-1])
SNP <- cbind(data[, 1], data[, a])
View(SNP)
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
print(paste(colnames(SNP), "selected"))
print(paste(colnames(SNP[,2]), "selected"))
print(paste(colnames(SNP[,2]), "selected"))
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP[,2]), "selected"))
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP[,2]), "selected"))
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP[, 2])
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
chisq.test(HWTable)
rm(ls= list())
rm(list = ls())
# Data loading
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP[,2]), "selected"))
print(paste(colnames(SNP[2]), "selected"))
print(paste(colnames(SNP)[2], "selected"))
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP[, 2])
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
chisq.test(HWTable)
print(HWTable)
print(chisq.test(HWTable))
SNP
c("TT", "CC", "CT")
c("TT", "CC", "CT") %in% SNP[,2]
c("TT", "CC", "CT") %in% SNP[,2]
SNP[,2] %in% c("TT", "CC", "CT")
SNP[,2] %in% c("TT", "CC", "CT", NA)
# Cleaning of the SNP table
SNP <- SNP[SNP[,2] %in% c("AA", "GG", "AG","TT", "CC", "CT", NA), ]
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP[, 2])
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
print(HWTable)
chisq.test(HWTable)
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP)[2], "selected"))
# Cleaning of the SNP table
SNP <- SNP[SNP[,2] %in% c("AA", "GG", "AG","TT", "CC", "CT", NA), ]
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP[, 2])
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
print(HWTable)
chisq.test(HWTable)
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP)[2], "selected"))
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP[, 2])
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
print(HWTable)
# Cleaning of the SNP table
SNP <- SNP[SNP[,2] %in% c("AA", "GG", "AG","TT", "CC", "CT", NA), ]
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP[, 2])
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
print(HWTable)
chisq.test(HWTable)
SNP[,2] %in% c("TT", "CC", "CT", NA)
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP)[2], "selected"))
# Cleaning of the SNP table
SNP <- SNP[SNP[,2] %in% c("AA", "GG", "AG","TT", "CC", "CT", NA), ]
# Testing for Hardy-Weinberg equilibrium
HWTable <- table(SNP[, 2])
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
print(HWTable)
chisq.test(HWTable)
# Contingency table
conTable <- table(SNP)
conTable
chisq.test(conTable)
conTable
# Factorizing the data
SNP[, 1] <- as.factor(SNP[, 1])
SNP[, 2] <- as.factor(SNP[, 2])
# Observed genotype frequencies in the dataset
HWTable <- table(SNP[, 2])
# Observed allele frequencies in the dataset
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
# Adding the expected genotype frequencies to the table
HWTable <- rbind(HWTable, c(p^2, 2*p*q, q^2)*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
# Printing the table
print(HWTable)
chisq.test(HWTable)
################################################################################
###### Testing if there is association among the phenotype and genotype ######
################################################################################
conTable <- table(SNP)
conTable
chisq.test(conTable)
chisq.test(conTable)$expected
chisq.test(HWTable[1,])$expected
HWTable
?chisq.test
chisq.test(HWTable[1,], p = HWtable[2,])
chisq.test(HWTable[1,], p = HWTable[2,])
HWTable
sum(HWTable[2,])
chisq.test(HWTable[1,], p = c(p^2, 2*p*q, q^2))
# Observed genotype frequencies in the dataset
HWTable <- table(SNP[, 2])
# Observed allele frequencies in the dataset
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
# Theoretical probabilities of genotype frequencies
HW_exp <- c(p^2, 2*p*q, q^2)
# Adding the expected genotype frequencies to the table
HWTable <- rbind(HWTable, HW_exp*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
# Printing the table
print(HWTable)
# Chi squared test
# We use just observed values for the testing. To determine the theoretical allele frequencies,
# we use the 'p' argument of the chisq.test() function.
chisq.test(HWTable[1,], p = HW_exp)
# Reading the excel file
data <- read_xlsx(here("APCgenotypesAnonym.xlsx"))
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP)[2], "selected"))
# Cleaning of the SNP table
SNP <- SNP[SNP[,2] %in% c("AA", "GG", "AG","TT", "CC", "CT", NA), ]
# Factorizing the data
SNP[, 1] <- as.factor(SNP[, 1])
SNP[, 2] <- as.factor(SNP[, 2])
# Observed genotype frequencies in the dataset
HWTable <- table(SNP[, 2])
# Observed allele frequencies in the dataset
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
# Theoretical probabilities of genotype frequencies
HW_exp <- c(p^2, 2*p*q, q^2)
# Adding the expected genotype frequencies to the table
HWTable <- rbind(HWTable, HW_exp*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
# Printing the table
print(HWTable)
# Chi squared test
# We use just observed values for the testing. To determine the theoretical allele frequencies,
# we use the 'p' argument of the chisq.test() function.
chisq.test(HWTable[1,], p = HW_exp)
# Creating and printing contingency table
conTable <- table(SNP)
conTable
# Chi squared test
# We use just observed values for the testing. To determine the theoretical allele frequencies,
# we use the 'p' argument of the chisq.test() function.
chisq.test(HWTable[1,], p = HW_exp)$Expected
# Chi squared test
# We use just observed values for the testing. To determine the theoretical allele frequencies,
# we use the 'p' argument of the chisq.test() function.
chisq.test(HWTable[1,], p = HW_exp)$expected
HWTable
chisq.test(conTable)
chisq.test(conTable)$observed
chisq.test(conTable)$expected
chisq.test(conTable)$p.values
chisq.test(conTable)$p.value
# Selecting a SNP
a <- menu(colnames(data[,-1]), title="Please, select the SNP of your interest:") + 1
SNP <- cbind(data[, 1], data[, a])
print(paste(colnames(SNP)[2], "selected"))
# Cleaning of the SNP table
SNP <- SNP[SNP[,2] %in% c("AA", "GG", "AG","TT", "CC", "CT", NA), ]
# Factorizing the data
SNP[, 1] <- as.factor(SNP[, 1])
SNP[, 2] <- as.factor(SNP[, 2])
####################################################
###### Testing for Hardy-Weinberg equilibrium ######
####################################################
# Observed genotype frequencies in the dataset
HWTable <- table(SNP[, 2])
# Observed allele frequencies in the dataset
p <- (2*HWTable[[1]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
q <- (2*HWTable[[3]] + HWTable[[2]])/(2*(HWTable[[1]] + HWTable[[2]] + HWTable[[3]]))
# Theoretical probabilities of genotype frequencies
HW_exp <- c(p^2, 2*p*q, q^2)
# Adding the expected genotype frequencies to the table
HWTable <- rbind(HWTable, HW_exp*sum(HWTable))
rownames(HWTable) <- c("Observed", "Expected")
# Printing the table
print(HWTable)
# Finally, we can perform the chi squared test
# We use just observed values for the testing. To determine the theoretical allele frequencies,
# we use the 'p' argument of the chisq.test() function.
chisq.test(HWTable[1,], p = HW_exp)
##############################################################################
###### Testing if there is association among the phenotype and genotype ######
##############################################################################
# Creating and printing contingency table
conTable <- table(SNP)
# Finally, we can perform the chi squared test
# We use just observed values for the testing. To determine the theoretical allele frequencies,
# we use the 'p' argument of the chisq.test() function.
chisq.test(HWTable[1,], p = HW_exp)
conTable
chisq.test(conTable[1, ])
chisq.test(conTable[1, ])$expected
chisq.test(conTable[2, ])$expected
chisq.test(conTable[2, ])
rownames(conTable)
for(i in 1:length(rownames(conTable))){
chisq.test(conTable[i, ])
}
print(chisq.test(conTable[i, ]))
1:length(rownames(conTable))
for(i in 1:length(rownames(conTable))){
chi <- chisq.test(conTable[i, ])
chi
}
print(chi)
dims(conTable)
# Packages
library(tidyverse)
library(readxl)
library(here)
dim(conTable)
print(conTable)
dim(conTable)[1]
pTable <- data.frame("Diagnosis", "p-value")
View(pTable)
pTable <- data.frame(row.names = c("Diagnosis", "p-value"))
View(pTable)
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(row in 1:dim(conTable)[1]){
pTable <- rbind(conTable[row], chisq.test(conTable[row])$p.value)
}
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(row in 1:dim(conTable)[1]){
pTable <- rbind(conTable[row], chisq.test(conTable[row,])$p.value)
}
View(pTable)
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(row in 1:dim(conTable)[1]){
print(conTable[row], chisq.test(conTable[row,])$p.value)
}
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in rownames(conTable)){
print(conTable$x)
}
print(conTable[x,])
print(conTable)
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
print(conTable[x,])
}
print(conTable[x,], chisq.test(conTable[x,]))
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
print(chisq.test(conTable[x,]))
}
print(chisq.test(conTable[x,]$p.value))
print(chisq.test(conTable[x,])$p.value)
pData <- data.frame()
rm(pTable)
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
pData <- rbind(pData, c(chisq.test(conTable[x,])$p.value))
}
View(pData)
pData <- data.frame()
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
pData <- rbind(pData, c(rownames(conTable)[x], chisq.test(conTable[x,])$p.value))
}
pData <- data.frame("Diagnosis" = c(), "p-value" = c())
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
pData <- rbind(pData, c(rownames(conTable)[x], chisq.test(conTable[x,])$p.value))
}
pData <- data.frame("Diagnosis" = c(), "p-value" = c())
View(pData)
pData <- data.frame()
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
pData <- rbind(pData, c("diagnosis" = rownames(conTable)[x], "p-value" = chisq.test(conTable[x,])$p.value))
}
colnames(pData) <- c("Diagnosis", "p-value from chi-square")
pData <- data.frame()
colnames(pData) <- c("Diagnosis", "p-value from chi-square")
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
pData <- rbind(pData, c(rownames(conTable)[x], chisq.test(conTable[x,])$p.value))
}
View(pData)
pData <- data.frame(matrix(nrow = 0, ncol = 2))
colnames(pData) <- c("Diagnosis", "p-value from chi-square")
View(pData)
# For each diagnosis, we want to test if there is difference in the genotype frequencies
for(x in 1:length(rownames(conTable))){
pData <- rbind(pData, c(rownames(conTable)[x], chisq.test(conTable[x,])$p.value))
}
View(SNP)
View(pData)
conTable
