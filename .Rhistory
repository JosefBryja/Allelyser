rbind(out, c(diag, chisq.test(Allele_table)$p.value, fisher.test(Allele_table)$p.value))
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 3))
colnames(out) <- c("Diagnosis", "Chi-squared test", "Fisher's exact test")
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
Allele_table <- rbind(Allele_table, rep(sum(Allele_table)/2, 2))
rbind(out, c(diag, chisq.test(Allele_table)$p.value, fisher.test(Allele_table)$p.value))
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 3))
colnames(out) <- c("Diagnosis", "Chi-squared test", "Fisher's exact test")
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
Allele_table <- rbind(Allele_table, rep(sum(Allele_table)/2, 2))
print(c(diag, chisq.test(Allele_table)$p.value, fisher.test(Allele_table)$p.value))
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 3))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(cbind(diag, Allele_table))
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 3))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(Allele_table)
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 3))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(Allele_table[[1]])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 3))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(Allele_table[[]])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 3))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
rbind(out, Allele_table)
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
rbind(out, Allele_table)
}
return(out)
}
SA_diagnosis(SNP)
rbind(out, Allele_table[1,])
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
rbind(out, Allele_table[1,])
}
return(out)
}
rbind(out, Allele_table[1,])
SA_diagnosis(SNP)
?rbind
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(Allele_table[1,])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(Allele_table[[c(1,2)]])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(Allele_table[[1:2]])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
print(Allele_table[1:2])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- table(single)
rbind(out, Allele_table[1:2])
}
return(out)
}
SA_diagnosis(SNP)
runApp()
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.dataframe(table(single))
print(Allele_table)
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
print(Allele_table)
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
print(Allele_table[,2])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
colnames(out) <- c("Allele A", "Allele B")
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
rbind(out, Allele_table[,2])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
colnames(out) <- c("Allele A", "Allele B")
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
rbind(out, c(Allele_table[,2]))
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
colnames(out) <- c("Allele A", "Allele B")
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
out <- rbind(out, Allele_table[,2])
}
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
out <- rbind(out, Allele_table[,2])
}
rownames(out) <- diagnoses
colnames(out) <- c("Allele A", "Allele B")
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
names <- levels(unlist(strsplit(as.character(data[,2]), "")))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
out <- rbind(out, Allele_table[,2])
}
rownames(out) <- diagnoses
colnames(out) <- names
return(out)
}
SA_diagnosis(SNP)
# Test the difference in number of alleles
SA_diagnosis <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
names <- levels(as.factor(unlist(strsplit(as.character(data[,2]), ""))))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
out <- rbind(out, Allele_table[,2])
}
rownames(out) <- diagnoses
colnames(out) <- names
return(out)
}
SA_diagnosis(SNP)
# Get the allele count for each diagnosis
SA_couts <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
names <- levels(as.factor(unlist(strsplit(as.character(data[,2]), ""))))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
out <- rbind(out, Allele_table[,2])
}
rownames(out) <- diagnoses
colnames(out) <- names
return(out)
}
SA_diagnosis(SNP)
# Get the allele count for each diagnosis
SA_counts <- function(data){
diagnoses <- levels(data[,1])
out <- data.frame(matrix(nrow = 0, ncol = 2))
names <- levels(as.factor(unlist(strsplit(as.character(data[,2]), ""))))
for(diag in diagnoses){
subdata <- data[data[,1] == diag,]
single <- unlist(strsplit(as.character(subdata[,2]), ""))
single <- single[!is.na(single)]
Allele_table <- as.data.frame(table(single))
out <- rbind(out, Allele_table[,2])
}
rownames(out) <- diagnoses
colnames(out) <- names
return(out)
}
# Tests
SA_tests <- function(data){
test_data <- SA_counts(data)
fisher.test(test_data)
chisq.test(test_data)
}
SA_tests(SNP)
test<-SA_counts(SNP)
test
fisher.test(test)
# Tests
SA_tests <- function(data){
test_data <- SA_counts(data)
return(list(
fisher.test(test_data),
chisq.test(test_data)
))
}
SA_tests(SNP)
# Tests
SA_tests <- function(data){
assign(data, SA_counts(data))
return(list(
fisher.test(test_data),
chisq.test(test_data)
))
}
SA_tests(SNP)
deparse(SNP)
deparse(substitute(SNP))
# Tests
SA_tests <- function(data){
name <- deparse(substitute(data))
assign(name, SA_counts(data))
return(list(
fisher.test(name),
chisq.test(name)
))
}
SA_tests(SNP)
# Tests
SA_tests <- function(data){
test_data <- SA_counts(data)
return(list(
fisher.test(test_data),
chisq.test(test_data)
))
}
SA_tests(SNP)
calculate_odds_ratio <- function(data) {
allele_counts <- SA_counts(data)
# Calculate odds ratio
odds_ratio <- apply(allele_counts, 1, function(x) x["Allele A"] / x["Allele B"])
# Confidence interval for odds ratio
confidence_interval <- apply(allele_counts, 1, function(x) {
p1 <- x["Allele A"] / sum(x)
p2 <- x["Allele B"] / sum(x)
log_odds_ratio <- log(p1 / p2)
se_log_odds_ratio <- sqrt(1 / x["Allele A"] + 1 / x["Allele B"])
exp(c(log_odds_ratio - 1.96 * se_log_odds_ratio, log_odds_ratio + 1.96 * se_log_odds_ratio))
})
# Combine results into a data frame
odds_ratio_df <- data.frame(Odds_Ratio = odds_ratio, Confidence_Interval = confidence_interval)
return(odds_ratio_df)
}
calculate_odds_ratio(SNP)
calculate_odds_ratio <- function(data) {
allele_counts <- SA_counts(data)
# Calculate odds ratio
odds_ratio <- apply(allele_counts, 1, function(x) x[1] / x[2])
# Confidence interval for odds ratio
confidence_interval <- apply(allele_counts, 1, function(x) {
p1 <- x[1] / sum(x)
p2 <- x[2] / sum(x)
log_odds_ratio <- log(p1 / p2)
se_log_odds_ratio <- sqrt(1 / x[1] + 1 / x[2])
exp(c(log_odds_ratio - 1.96 * se_log_odds_ratio, log_odds_ratio + 1.96 * se_log_odds_ratio))
})
# Combine results into a data frame
odds_ratio_df <- data.frame(Odds_Ratio = odds_ratio, Confidence_Interval = confidence_interval)
return(odds_ratio_df)
}
calculate_odds_ratio(SNP)
calculate_odds_ratio <- function(data) {
allele_counts <- SA_counts(data)
# Calculate odds ratio
odds_ratio <- apply(allele_counts, 1, function(x) x[1] / x[2])
return(odds_ratio)
}
calculate_odds_ratio(SNP)
install.packages("epitools")
library(epitools)
oddsratio(SA_counts(SNP))
SA_counts(SNP)
oddsratio(SA_counts(SNP))
?oddsratio
nrow(SA_counts(SNP))
test
oddsratio(test)
oddsratio(test, rev = "c")
oddsratio(as.table(test))
oddsratio(as.matrix(test))
calculate_odds_ratio(SNP)
calculate_odds_ratio <- function(data) {
allele_counts <- SA_counts(data)
# Calculate odds ratio and its standard error
odds_ratio <- apply(allele_counts, 1, function(x) x[1] / x[2])
se_log_odds_ratio <- sqrt(1 / allele_counts[, 1] + 1 / allele_counts[, 2])
# Confidence interval for odds ratio (using normal approximation)
confidence_interval <- cbind(
odds_ratio = odds_ratio,
confidence_interval = exp(c(
log(odds_ratio) - 1.96 * se_log_odds_ratio,
log(odds_ratio) + 1.96 * se_log_odds_ratio
))
)
return(as.data.frame(confidence_interval))
}
calculate_odds_ratio(SNP)
odds_ratio <-function(data){
counts <- SA_counts(data)
out <- oddsratio(counts)
return(out)
}
odds_ratio(SNP)
odds_ratio <-function(data){
counts <- as.matrix(SA_counts(data))
out <- oddsratio(counts)
return(out)
}
odds_ratio(SNP)
###########################
shiny::runApp()
